name: "Update nixpkg"
on:
  workflow_dispatch:
    inputs:
      package:
        description: Nix package
        required: true
        type: string
      current-version:
        description: Current version
        required: true
        type: string
      new-version:
        description: New version
        required: true
        type: string
      git-author-name:
        description: "Author name used for commit. Only used if sign-commits is false."
        required: false
        default: "github-actions[bot]"
      git-author-email:
        description: "Author email used for commit. Only used if sign-commits is false."
        required: false
        default: "github-actions[bot]@users.noreply.github.com"
        
jobs:
  update-nixpkgs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        repository: nix-community/nixpkgs-update
        path: nixpkgs-update

    - uses: cachix/install-nix-action@v30
      with:
          extra_nix_config: |
            experimental-features = nix-command flakes

    - name: Build nixpkgs-update
      run: |
        set -euo pipefail
        cd ${{ github.workspace }}/nixpkgs-update
        nix build --accept-flake-config

    - uses: actions/checkout@v4
      with:
        repository: ${{ github.repository_owner }}/nixpkgs
        fetch-depth: 0
        path: nixpkgs
        token: ${{ secrets.GH_TOKEN }}

    - id: branch-name
      shell: bash
      run: |
         echo "sanitize-name=$( echo ${{inputs.package}}-${{inputs.new-version}} | tr " |.|/" "-")" >> $GITHUB_OUTPUT

    - name: "Create PR to update: \"${{ inputs.package }}: ${{ inputs.current-version }} -> ${{ inputs.new-version }}\""
      shell: bash
      run: |
        set -euo pipefail
        cd ${{ github.workspace }}/nixpkgs
        git remote add upstream https://github.com/NixOS/nixpkgs.git
        git fetch upstream
        git merge upstream/master
        git branch "${{ steps.branch-name.outputs.sanitize-name }}"
        git switch "${{ steps.branch-name.outputs.sanitize-name }}"
        ${{ github.workspace }}/nixpkgs-update/result/bin/nixpkgs-update update --pr "${{ inputs.package }} ${{ inputs.current-version }} ${{ inputs.new-version }}"
        git config --global user.email "${{ inputs.git-author-email }}"
        git config --global user.name "${{ inputs.git-author-name }}"
        git push origin "${{ steps.branch-name.outputs.sanitize-name }}"
